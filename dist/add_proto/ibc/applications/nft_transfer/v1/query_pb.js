// @generated by protoc-gen-es v1.2.1
// @generated from file ibc/applications/nft_transfer/v1/query.proto (package ibc.applications.nft_transfer.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { ClassTrace, Params } from "./transfer_pb.js";
import { PageRequest, PageResponse } from "../../../../cosmos/base/query/v1beta1/pagination_pb.js";

/**
 * QueryClassTraceRequest is the request type for the Query/ClassDenom RPC
 * method
 *
 * @generated from message ibc.applications.nft_transfer.v1.QueryClassTraceRequest
 */
export const QueryClassTraceRequest = proto3.makeMessageType(
  "ibc.applications.nft_transfer.v1.QueryClassTraceRequest",
  () => [
    { no: 1, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryClassTraceResponse is the response type for the Query/ClassDenom RPC
 * method.
 *
 * @generated from message ibc.applications.nft_transfer.v1.QueryClassTraceResponse
 */
export const QueryClassTraceResponse = proto3.makeMessageType(
  "ibc.applications.nft_transfer.v1.QueryClassTraceResponse",
  () => [
    { no: 1, name: "class_trace", kind: "message", T: ClassTrace },
  ],
);

/**
 * QueryConnectionsRequest is the request type for the Query/ClassTraces RPC
 * method
 *
 * @generated from message ibc.applications.nft_transfer.v1.QueryClassTracesRequest
 */
export const QueryClassTracesRequest = proto3.makeMessageType(
  "ibc.applications.nft_transfer.v1.QueryClassTracesRequest",
  () => [
    { no: 1, name: "pagination", kind: "message", T: PageRequest },
  ],
);

/**
 * QueryClassTracesResponse is the response type for the Query/ClassTraces RPC
 * method.
 *
 * @generated from message ibc.applications.nft_transfer.v1.QueryClassTracesResponse
 */
export const QueryClassTracesResponse = proto3.makeMessageType(
  "ibc.applications.nft_transfer.v1.QueryClassTracesResponse",
  () => [
    { no: 1, name: "class_traces", kind: "message", T: ClassTrace, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PageResponse },
  ],
);

/**
 * QueryClassHashRequest is the request type for the Query/ClassHash RPC
 * method
 *
 * @generated from message ibc.applications.nft_transfer.v1.QueryClassHashRequest
 */
export const QueryClassHashRequest = proto3.makeMessageType(
  "ibc.applications.nft_transfer.v1.QueryClassHashRequest",
  () => [
    { no: 1, name: "trace", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryClassHashResponse is the response type for the Query/ClassHash RPC
 * method.
 *
 * @generated from message ibc.applications.nft_transfer.v1.QueryClassHashResponse
 */
export const QueryClassHashResponse = proto3.makeMessageType(
  "ibc.applications.nft_transfer.v1.QueryClassHashResponse",
  () => [
    { no: 1, name: "hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryEscrowAddressRequest is the request type for the EscrowAddress RPC
 * method.
 *
 * @generated from message ibc.applications.nft_transfer.v1.QueryEscrowAddressRequest
 */
export const QueryEscrowAddressRequest = proto3.makeMessageType(
  "ibc.applications.nft_transfer.v1.QueryEscrowAddressRequest",
  () => [
    { no: 1, name: "port_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "channel_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryEscrowAddressResponse is the response type of the EscrowAddress RPC
 * method.
 *
 * @generated from message ibc.applications.nft_transfer.v1.QueryEscrowAddressResponse
 */
export const QueryEscrowAddressResponse = proto3.makeMessageType(
  "ibc.applications.nft_transfer.v1.QueryEscrowAddressResponse",
  () => [
    { no: 1, name: "escrow_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * QueryParamsRequest is request type for the Query/Params RPC method.
 *
 * @generated from message ibc.applications.nft_transfer.v1.QueryParamsRequest
 */
export const QueryParamsRequest = proto3.makeMessageType(
  "ibc.applications.nft_transfer.v1.QueryParamsRequest",
  [],
);

/**
 * QueryParamsResponse is response type for the Query/Params RPC method.
 *
 * @generated from message ibc.applications.nft_transfer.v1.QueryParamsResponse
 */
export const QueryParamsResponse = proto3.makeMessageType(
  "ibc.applications.nft_transfer.v1.QueryParamsResponse",
  () => [
    { no: 1, name: "params", kind: "message", T: Params },
  ],
);

