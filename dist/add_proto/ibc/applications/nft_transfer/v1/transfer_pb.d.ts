// @generated by protoc-gen-es v1.2.1
// @generated from file ibc/applications/nft_transfer/v1/transfer.proto (package ibc.applications.nft_transfer.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * ClassTrace contains the base classID for ICS721 non-fungible tokens and the
 * source tracing information path.
 *
 * @generated from message ibc.applications.nft_transfer.v1.ClassTrace
 */
export declare class ClassTrace extends Message<ClassTrace> {
  /**
   * path defines the chain of port/channel identifiers used for tracing the
   * source of the non-fungible token.
   *
   * @generated from field: string path = 1;
   */
  path: string;

  /**
   * base classID of the relayed non-fungible token.
   *
   * @generated from field: string base_class_id = 2;
   */
  baseClassId: string;

  constructor(data?: PartialMessage<ClassTrace>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ibc.applications.nft_transfer.v1.ClassTrace";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClassTrace;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClassTrace;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClassTrace;

  static equals(a: ClassTrace | PlainMessage<ClassTrace> | undefined, b: ClassTrace | PlainMessage<ClassTrace> | undefined): boolean;
}

/**
 * Params defines the set of IBC nft-transfer parameters.
 * NOTE: To prevent a nft from being transferred, set the
 * TransfersEnabled parameter to false.
 *
 * @generated from message ibc.applications.nft_transfer.v1.Params
 */
export declare class Params extends Message<Params> {
  /**
   * send_enabled enables or disables all cross-chain nft transfers from this
   * chain.
   *
   * @generated from field: bool send_enabled = 1;
   */
  sendEnabled: boolean;

  /**
   * receive_enabled enables or disables all cross-chain nft transfers to this
   * chain.
   *
   * @generated from field: bool receive_enabled = 2;
   */
  receiveEnabled: boolean;

  constructor(data?: PartialMessage<Params>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ibc.applications.nft_transfer.v1.Params";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Params;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Params;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Params;

  static equals(a: Params | PlainMessage<Params> | undefined, b: Params | PlainMessage<Params> | undefined): boolean;
}

